plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "jp.classmethod.aws.lambda" version "0.38"
    id "net.ltgt.apt-eclipse" version "0.18"
    id "net.ltgt.apt-idea" version "0.18"	
}

apply plugin: "groovy"

version "0.1"
group "cz.orany.mnlib.hello"

configurations {
    lambdaCompile.extendsFrom runtime
    testCompile.extendsFrom lambdaCompile
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.0.0.RC3'
    }
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"

    lambdaCompile "com.agorapulse:micronaut-function-aws-agp:1.0.0.RC3"

    compile "io.micronaut:http-server"
    compile "io.micronaut:router"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    compileOnly "io.micronaut:micronaut-inject-java"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    runtime "com.amazonaws:aws-lambda-java-log4j2:1.0.0"
    runtime "org.apache.logging.log4j:log4j-slf4j-impl:2.9.1"
    testCompile "io.micronaut:micronaut-inject-java"
    testCompile "io.micronaut:micronaut-function-client"
    testCompile "junit:junit:4.12"
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "com.agorapulse:gru-api-gateway:0.6.6"
    testRuntime "io.micronaut:micronaut-http-server-netty"
    testRuntime "io.micronaut:micronaut-function-web"
}

task buildZip(type: Zip) {
    from compileGroovy
    from processResources
    into('lib') {
        from configurations.lambdaCompile
    }
}

build.dependsOn buildZip

if(new File("${System.getProperty("user.home")}/.aws/credentials").exists()) {
    task deploy(type: jp.classmethod.aws.gradle.lambda.AWSLambdaMigrateFunctionTask, dependsOn: buildZip) {
        functionName = "cz-orany-mnlib-hello"
        handler = 'com.agorapulse.micronaut.agp.ApiGatewayProxyHandler::handleRequest'
        role = "arn:aws:iam::${aws.accountId}:role/lambda_basic_execution"
        runtime = com.amazonaws.services.lambda.model.Runtime.Java8
        zipFile = buildZip.archivePath
        memorySize = 256
        timeout = 60
    }
}

compileJava.options.compilerArgs += '-parameters'
compileTestJava.options.compilerArgs += '-parameters'

